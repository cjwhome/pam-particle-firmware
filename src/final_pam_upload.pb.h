/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_FINAL_PAM_UPLOAD_PB_H_INCLUDED
#define PB_FINAL_PAM_UPLOAD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Composition { 
    Composition_SINGLE = 0, 
    Composition_MULTI_PART = 1 
} Composition;

typedef enum _SystemType { 
    SystemType_AQSYNC = 0, 
    SystemType_AQLITE = 1, 
    SystemType_PAM = 2, 
    SystemType_FOUR_ZERO_FIVE = 3, 
    SystemType_OZONE = 4, 
    SystemType_CO2 = 5, 
    SystemType_WEATHER = 6, 
    SystemType_PARTICLE = 7 
} SystemType;

typedef enum _Units { 
    Units_OTHER = 0, 
    Units_PPM = 1, 
    Units_PPB = 2, 
    Units_V = 3, 
    Units_BYTE = 4, 
    Units_DATETIME = 5 
} Units;

/* Struct definitions */
typedef struct _SystemTopology { 
    pb_callback_t devices; 
    pb_callback_t diagnostics; 
    pb_callback_t subSystems; 
} SystemTopology;

typedef struct _Calibration { 
    pb_callback_t name; 
    float zero; 
    float slope; /* We need to decide what else we think is calibration */
} Calibration;

typedef struct _DataPoint { 
    pb_callback_t name; 
    pb_callback_t value; 
    Units units; 
    pb_callback_t SSID; 
} DataPoint;

typedef struct _Device { 
    pb_callback_t name; 
    pb_callback_t SSID; 
    Units units; 
} Device;

typedef struct _Diagnostic { 
    pb_callback_t name; 
    pb_callback_t SSID; 
    Units units; 
} Diagnostic;

typedef struct _SystemSettings { 
    pb_callback_t name; 
    pb_callback_t Serial; 
    SystemType type; 
    int32_t primaryUploadFrequeny; 
    int32_t diagnosticUploadFrequeny; 
    pb_callback_t calibration; 
} SystemSettings;

typedef struct _Upload { 
    pb_callback_t SID; 
    int32_t DateUploaded; 
    int32_t pointsTaken; 
    pb_callback_t dataPoints; 
    bool terminated; 
    Composition composition; 
} Upload;

typedef struct _SubSystem { 
    pb_callback_t SSID; 
    bool has_Settings;
    SystemSettings Settings; 
    pb_callback_t PSID; 
} SubSystem;

typedef struct _SystemManifest { 
    pb_callback_t SID; 
    bool has_topology;
    SystemTopology topology; 
    bool has_settings;
    SystemSettings settings; 
    bool terminating; 
    Composition composition; 
} SystemManifest;


/* Helper constants for enums */
#define _Composition_MIN Composition_SINGLE
#define _Composition_MAX Composition_MULTI_PART
#define _Composition_ARRAYSIZE ((Composition)(Composition_MULTI_PART+1))

#define _SystemType_MIN SystemType_AQSYNC
#define _SystemType_MAX SystemType_PARTICLE
#define _SystemType_ARRAYSIZE ((SystemType)(SystemType_PARTICLE+1))

#define _Units_MIN Units_OTHER
#define _Units_MAX Units_DATETIME
#define _Units_ARRAYSIZE ((Units)(Units_DATETIME+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SystemManifest_init_default              {{{NULL}, NULL}, false, SystemTopology_init_default, false, SystemSettings_init_default, 0, _Composition_MIN}
#define SystemTopology_init_default              {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define SystemSettings_init_default              {{{NULL}, NULL}, {{NULL}, NULL}, _SystemType_MIN, 0, 0, {{NULL}, NULL}}
#define Calibration_init_default                 {{{NULL}, NULL}, 0, 0}
#define SubSystem_init_default                   {{{NULL}, NULL}, false, SystemSettings_init_default, {{NULL}, NULL}}
#define Device_init_default                      {{{NULL}, NULL}, {{NULL}, NULL}, _Units_MIN}
#define Diagnostic_init_default                  {{{NULL}, NULL}, {{NULL}, NULL}, _Units_MIN}
#define Upload_init_default                      {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, _Composition_MIN}
#define DataPoint_init_default                   {{{NULL}, NULL}, {{NULL}, NULL}, _Units_MIN, {{NULL}, NULL}}
#define SystemManifest_init_zero                 {{{NULL}, NULL}, false, SystemTopology_init_zero, false, SystemSettings_init_zero, 0, _Composition_MIN}
#define SystemTopology_init_zero                 {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define SystemSettings_init_zero                 {{{NULL}, NULL}, {{NULL}, NULL}, _SystemType_MIN, 0, 0, {{NULL}, NULL}}
#define Calibration_init_zero                    {{{NULL}, NULL}, 0, 0}
#define SubSystem_init_zero                      {{{NULL}, NULL}, false, SystemSettings_init_zero, {{NULL}, NULL}}
#define Device_init_zero                         {{{NULL}, NULL}, {{NULL}, NULL}, _Units_MIN}
#define Diagnostic_init_zero                     {{{NULL}, NULL}, {{NULL}, NULL}, _Units_MIN}
#define Upload_init_zero                         {{{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, _Composition_MIN}
#define DataPoint_init_zero                      {{{NULL}, NULL}, {{NULL}, NULL}, _Units_MIN, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SystemTopology_devices_tag               1
#define SystemTopology_diagnostics_tag           2
#define SystemTopology_subSystems_tag            3
#define Calibration_name_tag                     1
#define Calibration_zero_tag                     2
#define Calibration_slope_tag                    3
#define DataPoint_name_tag                       1
#define DataPoint_value_tag                      2
#define DataPoint_units_tag                      3
#define DataPoint_SSID_tag                       4
#define Device_name_tag                          1
#define Device_SSID_tag                          2
#define Device_units_tag                         3
#define Diagnostic_name_tag                      1
#define Diagnostic_SSID_tag                      2
#define Diagnostic_units_tag                     3
#define SystemSettings_name_tag                  1
#define SystemSettings_Serial_tag                2
#define SystemSettings_type_tag                  3
#define SystemSettings_primaryUploadFrequeny_tag 4
#define SystemSettings_diagnosticUploadFrequeny_tag 5
#define SystemSettings_calibration_tag           6
#define Upload_SID_tag                           1
#define Upload_DateUploaded_tag                  2
#define Upload_pointsTaken_tag                   3
#define Upload_dataPoints_tag                    4
#define Upload_terminated_tag                    5
#define Upload_composition_tag                   6
#define SubSystem_SSID_tag                       1
#define SubSystem_Settings_tag                   2
#define SubSystem_PSID_tag                       3
#define SystemManifest_SID_tag                   1
#define SystemManifest_topology_tag              2
#define SystemManifest_settings_tag              3
#define SystemManifest_terminating_tag           4
#define SystemManifest_composition_tag           5

/* Struct field encoding specification for nanopb */
#define SystemManifest_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   SID,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  topology,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  settings,          3) \
X(a, STATIC,   SINGULAR, BOOL,     terminating,       4) \
X(a, STATIC,   SINGULAR, UENUM,    composition,       5)
#define SystemManifest_CALLBACK pb_default_field_callback
#define SystemManifest_DEFAULT NULL
#define SystemManifest_topology_MSGTYPE SystemTopology
#define SystemManifest_settings_MSGTYPE SystemSettings

#define SystemTopology_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  devices,           1) \
X(a, CALLBACK, REPEATED, MESSAGE,  diagnostics,       2) \
X(a, CALLBACK, REPEATED, MESSAGE,  subSystems,        3)
#define SystemTopology_CALLBACK pb_default_field_callback
#define SystemTopology_DEFAULT NULL
#define SystemTopology_devices_MSGTYPE Device
#define SystemTopology_diagnostics_MSGTYPE Diagnostic
#define SystemTopology_subSystems_MSGTYPE SubSystem

#define SystemSettings_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   Serial,            2) \
X(a, STATIC,   SINGULAR, UENUM,    type,              3) \
X(a, STATIC,   SINGULAR, INT32,    primaryUploadFrequeny,   4) \
X(a, STATIC,   SINGULAR, INT32,    diagnosticUploadFrequeny,   5) \
X(a, CALLBACK, REPEATED, MESSAGE,  calibration,       6)
#define SystemSettings_CALLBACK pb_default_field_callback
#define SystemSettings_DEFAULT NULL
#define SystemSettings_calibration_MSGTYPE Calibration

#define Calibration_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    zero,              2) \
X(a, STATIC,   SINGULAR, FLOAT,    slope,             3)
#define Calibration_CALLBACK pb_default_field_callback
#define Calibration_DEFAULT NULL

#define SubSystem_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   SSID,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Settings,          2) \
X(a, CALLBACK, SINGULAR, STRING,   PSID,              3)
#define SubSystem_CALLBACK pb_default_field_callback
#define SubSystem_DEFAULT NULL
#define SubSystem_Settings_MSGTYPE SystemSettings

#define Device_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   SSID,              2) \
X(a, STATIC,   SINGULAR, UENUM,    units,             3)
#define Device_CALLBACK pb_default_field_callback
#define Device_DEFAULT NULL

#define Diagnostic_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   SSID,              2) \
X(a, STATIC,   SINGULAR, UENUM,    units,             3)
#define Diagnostic_CALLBACK pb_default_field_callback
#define Diagnostic_DEFAULT NULL

#define Upload_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   SID,               1) \
X(a, STATIC,   SINGULAR, INT32,    DateUploaded,      2) \
X(a, STATIC,   SINGULAR, INT32,    pointsTaken,       3) \
X(a, CALLBACK, REPEATED, MESSAGE,  dataPoints,        4) \
X(a, STATIC,   SINGULAR, BOOL,     terminated,        5) \
X(a, STATIC,   SINGULAR, UENUM,    composition,       6)
#define Upload_CALLBACK pb_default_field_callback
#define Upload_DEFAULT NULL
#define Upload_dataPoints_MSGTYPE DataPoint

#define DataPoint_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   value,             2) \
X(a, STATIC,   SINGULAR, UENUM,    units,             3) \
X(a, CALLBACK, SINGULAR, STRING,   SSID,              4)
#define DataPoint_CALLBACK pb_default_field_callback
#define DataPoint_DEFAULT NULL

extern const pb_msgdesc_t SystemManifest_msg;
extern const pb_msgdesc_t SystemTopology_msg;
extern const pb_msgdesc_t SystemSettings_msg;
extern const pb_msgdesc_t Calibration_msg;
extern const pb_msgdesc_t SubSystem_msg;
extern const pb_msgdesc_t Device_msg;
extern const pb_msgdesc_t Diagnostic_msg;
extern const pb_msgdesc_t Upload_msg;
extern const pb_msgdesc_t DataPoint_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SystemManifest_fields &SystemManifest_msg
#define SystemTopology_fields &SystemTopology_msg
#define SystemSettings_fields &SystemSettings_msg
#define Calibration_fields &Calibration_msg
#define SubSystem_fields &SubSystem_msg
#define Device_fields &Device_msg
#define Diagnostic_fields &Diagnostic_msg
#define Upload_fields &Upload_msg
#define DataPoint_fields &DataPoint_msg

/* Maximum encoded size of messages (where known) */
/* SystemManifest_size depends on runtime parameters */
/* SystemTopology_size depends on runtime parameters */
/* SystemSettings_size depends on runtime parameters */
/* Calibration_size depends on runtime parameters */
/* SubSystem_size depends on runtime parameters */
/* Device_size depends on runtime parameters */
/* Diagnostic_size depends on runtime parameters */
/* Upload_size depends on runtime parameters */
/* DataPoint_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
